CREATE TABLE tag (id BIGINT AUTO_INCREMENT, name VARCHAR(100), is_triple TINYINT(1), triple_namespace VARCHAR(100), triple_key VARCHAR(100), triple_value VARCHAR(100), INDEX name_idx (name), INDEX triple1_idx (triple_namespace), INDEX triple2_idx (triple_key), INDEX triple3_idx (triple_value), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE tagging (id BIGINT AUTO_INCREMENT, tag_id BIGINT NOT NULL, taggable_model VARCHAR(30), taggable_id BIGINT, INDEX tag_idx (tag_id), INDEX taggable_idx (taggable_model, taggable_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_access (id BIGINT AUTO_INCREMENT, page_id BIGINT, privilege VARCHAR(100), user_id BIGINT, INDEX pageindex_idx (page_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_area (id BIGINT AUTO_INCREMENT, page_id BIGINT, name VARCHAR(100), culture VARCHAR(7), latest_version BIGINT, INDEX page_index_idx (page_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_area_version (id BIGINT AUTO_INCREMENT, area_id BIGINT, version BIGINT, author_id BIGINT, diff VARCHAR(200), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX area_index_idx (area_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_area_version_slot (id BIGINT AUTO_INCREMENT, slot_id BIGINT, area_version_id BIGINT, permid BIGINT DEFAULT 1, rank BIGINT DEFAULT 1, INDEX area_version_index_idx (area_version_id), INDEX slot_id_idx (slot_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_slot (id BIGINT AUTO_INCREMENT, type VARCHAR(100), variant VARCHAR(100), value LONGTEXT, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_blog_editor (blog_item_id BIGINT, user_id BIGINT, PRIMARY KEY(blog_item_id, user_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_blog_item (id BIGINT AUTO_INCREMENT, author_id BIGINT, page_id BIGINT, title VARCHAR(255) NOT NULL, slug VARCHAR(255) NOT NULL, slug_saved TINYINT(1) DEFAULT '0', excerpt TEXT, status VARCHAR(255) DEFAULT 'draft' NOT NULL, allow_comments TINYINT(1) DEFAULT '0' NOT NULL, template VARCHAR(255) DEFAULT 'singleColumnTemplate', published_at DATETIME, disqus_thread_identifier VARCHAR(100), type VARCHAR(255), start_date DATE, start_time TIME, end_date DATE, end_time TIME, location TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX a_blog_item_type_idx (type), INDEX author_id_idx (author_id), INDEX page_id_idx (page_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_blog_item_to_category (blog_item_id BIGINT, category_id BIGINT, PRIMARY KEY(blog_item_id, category_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_blog_item (id BIGINT AUTO_INCREMENT, author_id BIGINT, page_id BIGINT, title VARCHAR(255) NOT NULL, slug VARCHAR(255) NOT NULL, slug_saved TINYINT(1) DEFAULT '0', excerpt TEXT, status VARCHAR(255) DEFAULT 'draft' NOT NULL, allow_comments TINYINT(1) DEFAULT '0' NOT NULL, template VARCHAR(255) DEFAULT 'singleColumnTemplate', published_at DATETIME, disqus_thread_identifier VARCHAR(100), type VARCHAR(255), start_date DATE, start_time TIME, end_date DATE, end_time TIME, location TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX author_id_idx (author_id), INDEX page_id_idx (page_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_cache_item (k VARCHAR(255), value LONGBLOB, timeout BIGINT, last_mod BIGINT, PRIMARY KEY(k)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_category (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), UNIQUE INDEX a_category_sluggable_idx (slug), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_category_group (category_id BIGINT, group_id BIGINT, PRIMARY KEY(category_id, group_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_category_user (category_id BIGINT, user_id BIGINT, PRIMARY KEY(category_id, user_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_embed_media_account (id BIGINT AUTO_INCREMENT, service VARCHAR(100) NOT NULL, username VARCHAR(100) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_group_access (id BIGINT AUTO_INCREMENT, page_id BIGINT, privilege VARCHAR(100), group_id BIGINT, INDEX pageindex_idx (page_id), INDEX group_id_idx (group_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_lucene_update (id BIGINT AUTO_INCREMENT, page_id BIGINT, culture VARCHAR(7), INDEX page_and_culture_index_idx (page_id, culture), INDEX page_id_idx (page_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_media_item (id BIGINT AUTO_INCREMENT, lucene_dirty TINYINT(1) DEFAULT '0', type VARCHAR(255) NOT NULL, service_url VARCHAR(200), format VARCHAR(10), width BIGINT, height BIGINT, embed TEXT, title VARCHAR(200) NOT NULL, description TEXT, credit VARCHAR(200), owner_id BIGINT, view_is_secure TINYINT(1) DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), UNIQUE INDEX a_media_item_sluggable_idx (slug), INDEX owner_id_idx (owner_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_media_item_to_a_search_document (id BIGINT AUTO_INCREMENT, a_search_document_id BIGINT, a_media_item_id BIGINT, INDEX a_search_document_id_idx (a_search_document_id), INDEX a_media_item_id_idx (a_media_item_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_media_item_to_category (media_item_id BIGINT, category_id BIGINT, PRIMARY KEY(media_item_id, category_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_page (id BIGINT AUTO_INCREMENT, slug TEXT, template VARCHAR(100), view_is_secure TINYINT(1) DEFAULT '0', view_guest TINYINT(1) DEFAULT '1', edit_admin_lock TINYINT(1) DEFAULT '0', view_admin_lock TINYINT(1) DEFAULT '0', published_at DATETIME, archived TINYINT(1), admin TINYINT(1) DEFAULT '0', author_id BIGINT, deleter_id BIGINT, engine VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, lft INT, rgt INT, level SMALLINT, INDEX slugindex_idx (slug(1000)), INDEX engineindex_idx (engine), INDEX author_id_idx (author_id), INDEX deleter_id_idx (deleter_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_page_to_a_search_document (id BIGINT AUTO_INCREMENT, a_search_document_id BIGINT, a_page_id BIGINT, INDEX a_search_document_id_idx (a_search_document_id), INDEX a_page_id_idx (a_page_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_page_to_category (page_id BIGINT, category_id BIGINT, PRIMARY KEY(page_id, category_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_redirect (id BIGINT AUTO_INCREMENT, page_id BIGINT, slug VARCHAR(255) UNIQUE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX slugindex_idx (slug), INDEX page_id_idx (page_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_search_document (id BIGINT AUTO_INCREMENT, culture VARCHAR(5), info LONGTEXT, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_search_usage (id BIGINT AUTO_INCREMENT, document_id BIGINT NOT NULL, word_id BIGINT NOT NULL, weight FLOAT(18, 2) NOT NULL, INDEX document_id_idx (document_id), INDEX word_id_idx (word_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_search_word (id BIGINT AUTO_INCREMENT, text VARCHAR(100) NOT NULL UNIQUE, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_slot (id BIGINT AUTO_INCREMENT, type VARCHAR(100), variant VARCHAR(100), value LONGTEXT, INDEX a_slot_type_idx (type), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE a_slot_media_item (media_item_id BIGINT, slot_id BIGINT, PRIMARY KEY(media_item_id, slot_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ENGINE = INNODB;
ALTER TABLE a_access ADD CONSTRAINT a_access_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE a_access ADD CONSTRAINT a_access_page_id_a_page_id FOREIGN KEY (page_id) REFERENCES a_page(id) ON DELETE CASCADE;
ALTER TABLE a_area ADD CONSTRAINT a_area_page_id_a_page_id FOREIGN KEY (page_id) REFERENCES a_page(id) ON DELETE CASCADE;
ALTER TABLE a_area_version ADD CONSTRAINT a_area_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id) ON DELETE SET NULL;
ALTER TABLE a_area_version ADD CONSTRAINT a_area_version_area_id_a_area_id FOREIGN KEY (area_id) REFERENCES a_area(id) ON DELETE CASCADE;
ALTER TABLE a_area_version_slot ADD CONSTRAINT a_area_version_slot_slot_id_a_slot_id FOREIGN KEY (slot_id) REFERENCES a_slot(id) ON DELETE CASCADE;
ALTER TABLE a_area_version_slot ADD CONSTRAINT a_area_version_slot_area_version_id_a_area_version_id FOREIGN KEY (area_version_id) REFERENCES a_area_version(id) ON DELETE CASCADE;
ALTER TABLE a_blog_editor ADD CONSTRAINT a_blog_editor_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE a_blog_editor ADD CONSTRAINT a_blog_editor_blog_item_id_a_blog_item_id FOREIGN KEY (blog_item_id) REFERENCES a_blog_item(id) ON DELETE CASCADE;
ALTER TABLE a_blog_item ADD CONSTRAINT a_blog_item_page_id_a_page_id FOREIGN KEY (page_id) REFERENCES a_page(id) ON DELETE CASCADE;
ALTER TABLE a_blog_item ADD CONSTRAINT a_blog_item_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id) ON DELETE SET NULL;
ALTER TABLE a_blog_item_to_category ADD CONSTRAINT a_blog_item_to_category_category_id_a_category_id FOREIGN KEY (category_id) REFERENCES a_category(id) ON DELETE CASCADE;
ALTER TABLE a_blog_item_to_category ADD CONSTRAINT a_blog_item_to_category_blog_item_id_a_blog_item_id FOREIGN KEY (blog_item_id) REFERENCES a_blog_item(id) ON DELETE CASCADE;
ALTER TABLE a_category_group ADD CONSTRAINT a_category_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE a_category_group ADD CONSTRAINT a_category_group_category_id_a_category_id FOREIGN KEY (category_id) REFERENCES a_category(id) ON DELETE CASCADE;
ALTER TABLE a_category_user ADD CONSTRAINT a_category_user_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE a_category_user ADD CONSTRAINT a_category_user_category_id_a_category_id FOREIGN KEY (category_id) REFERENCES a_category(id) ON DELETE CASCADE;
ALTER TABLE a_group_access ADD CONSTRAINT a_group_access_page_id_a_page_id FOREIGN KEY (page_id) REFERENCES a_page(id) ON DELETE CASCADE;
ALTER TABLE a_group_access ADD CONSTRAINT a_group_access_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE a_lucene_update ADD CONSTRAINT a_lucene_update_page_id_a_page_id FOREIGN KEY (page_id) REFERENCES a_page(id) ON DELETE CASCADE;
ALTER TABLE a_media_item ADD CONSTRAINT a_media_item_owner_id_sf_guard_user_id FOREIGN KEY (owner_id) REFERENCES sf_guard_user(id) ON DELETE SET NULL;
ALTER TABLE a_media_item_to_a_search_document ADD CONSTRAINT aaai_1 FOREIGN KEY (a_media_item_id) REFERENCES a_media_item(id) ON DELETE CASCADE;
ALTER TABLE a_media_item_to_a_search_document ADD CONSTRAINT aaai FOREIGN KEY (a_search_document_id) REFERENCES a_search_document(id) ON DELETE CASCADE;
ALTER TABLE a_media_item_to_category ADD CONSTRAINT a_media_item_to_category_media_item_id_a_media_item_id FOREIGN KEY (media_item_id) REFERENCES a_media_item(id) ON DELETE CASCADE;
ALTER TABLE a_media_item_to_category ADD CONSTRAINT a_media_item_to_category_category_id_a_category_id FOREIGN KEY (category_id) REFERENCES a_category(id) ON DELETE CASCADE;
ALTER TABLE a_page ADD CONSTRAINT a_page_deleter_id_sf_guard_user_id FOREIGN KEY (deleter_id) REFERENCES sf_guard_user(id) ON DELETE SET NULL;
ALTER TABLE a_page ADD CONSTRAINT a_page_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id) ON DELETE SET NULL;
ALTER TABLE a_page_to_a_search_document ADD CONSTRAINT aaai_2 FOREIGN KEY (a_search_document_id) REFERENCES a_search_document(id) ON DELETE CASCADE;
ALTER TABLE a_page_to_a_search_document ADD CONSTRAINT a_page_to_a_search_document_a_page_id_a_page_id FOREIGN KEY (a_page_id) REFERENCES a_page(id) ON DELETE CASCADE;
ALTER TABLE a_page_to_category ADD CONSTRAINT a_page_to_category_page_id_a_page_id FOREIGN KEY (page_id) REFERENCES a_page(id) ON DELETE CASCADE;
ALTER TABLE a_page_to_category ADD CONSTRAINT a_page_to_category_category_id_a_category_id FOREIGN KEY (category_id) REFERENCES a_category(id) ON DELETE CASCADE;
ALTER TABLE a_redirect ADD CONSTRAINT a_redirect_page_id_a_page_id FOREIGN KEY (page_id) REFERENCES a_page(id) ON DELETE CASCADE;
ALTER TABLE a_search_usage ADD CONSTRAINT a_search_usage_word_id_a_search_word_id FOREIGN KEY (word_id) REFERENCES a_search_word(id) ON DELETE CASCADE;
ALTER TABLE a_search_usage ADD CONSTRAINT a_search_usage_document_id_a_search_document_id FOREIGN KEY (document_id) REFERENCES a_search_document(id) ON DELETE CASCADE;
ALTER TABLE a_slot_media_item ADD CONSTRAINT a_slot_media_item_slot_id_a_slot_id FOREIGN KEY (slot_id) REFERENCES a_slot(id) ON DELETE CASCADE;
ALTER TABLE a_slot_media_item ADD CONSTRAINT a_slot_media_item_media_item_id_a_media_item_id FOREIGN KEY (media_item_id) REFERENCES a_media_item(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
