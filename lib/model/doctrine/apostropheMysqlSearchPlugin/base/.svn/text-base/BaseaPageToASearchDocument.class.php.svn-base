<?php

/**
 * BaseaPageToASearchDocument
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $a_search_document_id
 * @property integer $a_page_id
 * @property aSearchDocument $aSearchDocument
 * @property aPage $aPage
 * 
 * @method integer                getASearchDocumentId()    Returns the current record's "a_search_document_id" value
 * @method integer                getAPageId()              Returns the current record's "a_page_id" value
 * @method aSearchDocument        getASearchDocument()      Returns the current record's "aSearchDocument" value
 * @method aPage                  getAPage()                Returns the current record's "aPage" value
 * @method aPageToASearchDocument setASearchDocumentId()    Sets the current record's "a_search_document_id" value
 * @method aPageToASearchDocument setAPageId()              Sets the current record's "a_page_id" value
 * @method aPageToASearchDocument setASearchDocument()      Sets the current record's "aSearchDocument" value
 * @method aPageToASearchDocument setAPage()                Sets the current record's "aPage" value
 * 
 * @package    asandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseaPageToASearchDocument extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('a_page_to_a_search_document');
        $this->hasColumn('a_search_document_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('a_page_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('aSearchDocument', array(
             'local' => 'a_search_document_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('aPage', array(
             'local' => 'a_page_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}